<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:Core;assembly=Core"
                    xmlns:ui="clr-namespace:Ui.Controls;assembly=Ui"
                    xmlns:local="clr-namespace:QRBase">
	<SolidColorBrush Color="Black" Opacity="0.5" x:Key="RequestItem.Background"/>

	<SolidColorBrush Color="White" x:Key="RequestItem.Foreground"/>

	<DataTemplate DataType="{x:Type core:CheckValueItem}">
		<CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:BoolValueItem}">
		<CheckBox IsChecked="{Binding Value}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ListValueItem}">
		<ListBox ItemsSource="{Binding List}" MaxHeight="100" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ComboListValueItem}">
		<ComboBox ItemsSource="{Binding List}" SelectedValue="{Binding Value}" MaxHeight="100"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:StringValueItem}">
		<TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:IntValueItem}">
		<ui:NumericUpDown Value="{Binding Value}" NumericFormat="0" Minimum="{Binding MinValue}" Maximum="{Binding MaxValue}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:PasswordValueItem}">
		<!--PasswordHelper позволяет создать биндинг, хотя и нарушает концепцию скрытия самого пароля. Для того, чтоб корректно отрабатывало биндингу нужно указать двухстороннюю связь-->
		<PasswordBox local:PasswordHelper.Attach="True" local:PasswordHelper.Password="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:PathValueItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="50"/>
				<!--Так ширина тектовых блоков будет одна для всех PathValueItem-->
				<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Name="PathBox" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
			<!--
                        Комманде передаем текстбокс т.к. выболнять её будет вьюмодель, а она не знает куда вернуть текст, так через параметр устанавлеваем приемник текста.
                        И для того, чтоб значение пришло в бндинг, сам биндинг должен быть настроен на изменение значения, а не на потерю фокуса (по дефолту).
                    -->
			<Button Grid.Column="1" Background="{StaticResource RequestItem.Background}" Command="{Binding Exec}" CommandParameter="{Binding ElementName=PathBox}">
				<Path Height="10" Margin="2" Data="M7.5160018,7.0210069L32,7.0210069 26.112001,21.280001 2.2460016,21.280001z M0,0L9.2969996,0 11.158,4.0930236 26.091997,4.0930236 26.087999,5.3469933 6.3500015,5.3469933 0.46300124,21.280001 0,21.280001z" Stretch="Uniform" Fill="{StaticResource RequestItem.Foreground}"/>
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:OpenFileValueItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="50"/>
				<!--Так ширина тектовых блоков будет одна для всех OpenFileValueItem-->
				<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Name="FileNameBox" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
			<Button Grid.Column="1" Background="{StaticResource RequestItem.Background}" Command="{Binding Exec}" CommandParameter="{Binding ElementName=FileNameBox}">
				<Path Height="10" Margin="2" Data="M7.5160018,7.0210069L32,7.0210069 26.112001,21.280001 2.2460016,21.280001z M0,0L9.2969996,0 11.158,4.0930236 26.091997,4.0930236 26.087999,5.3469933 6.3500015,5.3469933 0.46300124,21.280001 0,21.280001z" Stretch="Uniform" Fill="{StaticResource RequestItem.Foreground}"/>
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ParametersRequestItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<!--Зададим расшареную ширину, чтоб все тайтлы были одной ширины-->
				<ColumnDefinition Width="30*" MinWidth="50" SharedSizeGroup="TitleColumn"/>
				<ColumnDefinition Width="70*" MinWidth="90"/>
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding Title}" ToolTip="{Binding Hint}"/>
			<ContentControl Grid.Column="1" Margin="5" Content="{Binding Value}" Focusable="False"/>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:BoolRequestItem}">
		<CheckBox IsChecked="{Binding Value}" ToolTip="{Binding Hint}">
			<TextBlock Text="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</CheckBox>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:HeaderRequestItem}">
		<Border BorderBrush="{StaticResource RequestItem.Foreground}" BorderThickness="0,0,0,1" Margin="0,2,0,0">
			<TextBlock Margin="4,0" FontWeight="Bold" Text="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:TextRequestItem}">
		<Border BorderBrush="{StaticResource RequestItem.Foreground}">
			<TextBlock Margin="4,0" Text="{Binding Title}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</Border>
	</DataTemplate>
</ResourceDictionary>
