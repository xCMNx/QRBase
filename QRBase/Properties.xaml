<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:Core;assembly=Core"
                    xmlns:ui="clr-namespace:Ui.Controls;assembly=Ui"
                    xmlns:cnv="clr-namespace:Ui.Converters;assembly=Ui"
                    xmlns:local="clr-namespace:QRBase">
	<SolidColorBrush Color="Black" Opacity="0.5" x:Key="RequestItem.Background"/>

	<SolidColorBrush Color="White" x:Key="RequestItem.Foreground"/>

	<DataTemplate DataType="{x:Type core:CheckValueItem}">
		<CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:BoolValueItem}">
		<CheckBox IsChecked="{Binding Value}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ListValueItem}">
		<ListBox ItemsSource="{Binding List}" MaxHeight="100" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ComboListValueItem}">
		<ComboBox ItemsSource="{Binding List}" SelectedValue="{Binding Value}" MaxHeight="100"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:StringValueItem}">
		<TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:NumericValueItem}">
		<ui:NumericUpDown Value="{Binding Value, Mode=TwoWay}" NumericFormat="{Binding NumericFormat}" Minimum="{Binding MinValue}" Maximum="{Binding MaxValue}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:PasswordValueItem}">
		<!--PasswordHelper позволяет создать биндинг, хотя и нарушает концепцию скрытия самого пароля. Для того, чтоб корректно отрабатывало биндингу нужно указать двухстороннюю связь-->
		<PasswordBox local:PasswordHelper.Attach="True" local:PasswordHelper.Password="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:PathValueItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="50"/>
				<!--Так ширина тектовых блоков будет одна для всех PathValueItem-->
				<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Name="PathBox" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
			<!--
                        Комманде передаем текстбокс т.к. выболнять её будет вьюмодель, а она не знает куда вернуть текст, так через параметр устанавлеваем приемник текста.
                        И для того, чтоб значение пришло в бндинг, сам биндинг должен быть настроен на изменение значения, а не на потерю фокуса (по дефолту).
                    -->
			<Button Grid.Column="1" Background="{StaticResource RequestItem.Background}" Command="{Binding Exec}" CommandParameter="{Binding ElementName=PathBox}">
				<Path Height="10" Margin="2" Data="M7.5160018,7.0210069L32,7.0210069 26.112001,21.280001 2.2460016,21.280001z M0,0L9.2969996,0 11.158,4.0930236 26.091997,4.0930236 26.087999,5.3469933 6.3500015,5.3469933 0.46300124,21.280001 0,21.280001z" Stretch="Uniform" Fill="{StaticResource RequestItem.Foreground}"/>
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:OpenFileValueItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="50"/>
				<!--Так ширина тектовых блоков будет одна для всех OpenFileValueItem-->
				<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Name="FileNameBox" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="{StaticResource RequestItem.Background}" Foreground="{StaticResource RequestItem.Foreground}"/>
			<Button Grid.Column="1" Background="{StaticResource RequestItem.Background}" Command="{Binding Exec}" CommandParameter="{Binding ElementName=FileNameBox}">
				<Path Height="10" Margin="2" Data="M7.5160018,7.0210069L32,7.0210069 26.112001,21.280001 2.2460016,21.280001z M0,0L9.2969996,0 11.158,4.0930236 26.091997,4.0930236 26.087999,5.3469933 6.3500015,5.3469933 0.46300124,21.280001 0,21.280001z" Stretch="Uniform" Fill="{StaticResource RequestItem.Foreground}"/>
			</Button>
		</Grid>
	</DataTemplate>

	<cnv:ColorToSolidBrushConverter x:Key="cnvClrToBrush"/>

	<DataTemplate DataType="{x:Type core:ColorValueItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="50"/>
				<!--Так ширина тектовых блоков будет одна для всех OpenFileValueItem-->
				<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
			</Grid.ColumnDefinitions>
			<Border Grid.Column="0" Name="ColorSampleBox" Background="{Binding Value, Converter={StaticResource cnvClrToBrush}}"/>
			<Button Grid.Column="1" Background="{StaticResource RequestItem.Background}" Command="{Binding Exec}" CommandParameter="{Binding ElementName=ColorSampleBox}">
				<Path Height="10" Margin="2" Data="M25.620001,10.567001C24.123999,10.567001 22.928015,11.763 22.928015,13.259003 22.928015,14.753998 24.123999,15.950005 25.620001,15.950005L25.719,15.950005C27.114996,15.950005 28.411018,14.753998 28.411018,13.259003 28.411018,12.162003 27.713018,11.264999 26.716009,10.765999 26.317999,10.667 26.019018,10.567001 25.620001,10.567001z M6.0809951,10.567001C4.5859995,10.567001 3.3890083,11.763 3.3890085,13.259003 3.3890083,14.753998 4.5859995,15.950005 6.0809951,15.950005L6.2800002,15.950005C7.6759968,15.950005 8.9720173,14.753998 8.9720173,13.259003 8.9720173,12.162003 8.1740131,11.165001 7.27701,10.765999 6.7789931,10.667 6.3800063,10.567001 6.0809951,10.567001z M20.536016,3.5890045C18.941013,3.5890045 17.743992,4.7850037 17.743992,6.1809998 17.743992,6.9780045 18.143009,7.6760025 18.642002,8.0750046 18.841007,8.2740021 19.140018,8.473999 19.338993,8.572998 19.73801,8.7730026 20.136999,8.9720001 20.536016,8.9720001 22.031012,8.9720001 23.226995,7.776001 23.226995,6.2799988 23.226995,4.7850037 22.031012,3.5890045 20.536016,3.5890045z M11.563998,3.5890045C11.364017,3.5890045 11.265018,3.6880035 11.065005,3.6880035 9.7690144,3.8880005 8.6730061,4.8850021 8.6730061,6.2799988 8.6730061,7.776001 9.8689899,8.9720001 11.364017,8.9720001 12.162021,8.9720001 12.760013,8.6730042 13.257998,8.1740036 13.756991,7.6760025 14.15601,6.9780045 14.15601,6.2799988 14.15601,4.7850037 12.959018,3.5890045 11.563998,3.5890045z M15.950016,0C24.821997,0 31.900002,6.3800049 31.900002,14.155998 31.900002,19.139999 28.011999,23.028 23.028021,23.028L19.838017,23.028C18.44202,23.028 17.146,24.324005 17.146,25.720001 17.146,26.417 17.545017,26.916 17.843998,27.514 18.343021,28.012001 18.541996,28.611 18.541996,29.307999 18.541996,30.704002 17.346012,32 15.85001,32 7.0780048,31.900002 -5.2932592E-09,24.821999 0,15.950005 -5.2932592E-09,7.0780029 7.0780048,0 15.950016,0z" Stretch="Uniform" Fill="{StaticResource RequestItem.Foreground}"/>
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:ParametersRequestItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<!--Зададим расшареную ширину, чтоб все тайтлы были одной ширины-->
				<ColumnDefinition Width="30*" MinWidth="50" SharedSizeGroup="TitleColumn"/>
				<ColumnDefinition Width="70*" MinWidth="90"/>
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding Title}" ToolTip="{Binding Hint}"/>
			<ContentControl Grid.Column="1" Margin="5" Content="{Binding Value}" Focusable="False"/>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:BoolRequestItem}">
		<CheckBox IsChecked="{Binding Value}" ToolTip="{Binding Hint}">
			<TextBlock Text="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</CheckBox>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:HeaderRequestItem}">
		<Border BorderBrush="{StaticResource RequestItem.Foreground}" BorderThickness="0,0,0,1" Margin="0,2,0,0">
			<TextBlock Margin="4,0" FontWeight="Bold" Text="{Binding Title}" ToolTip="{Binding Hint}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type core:TextRequestItem}">
		<Border BorderBrush="{StaticResource RequestItem.Foreground}">
			<TextBlock Margin="4,0" Text="{Binding Title}" Foreground="{StaticResource RequestItem.Foreground}"/>
		</Border>
	</DataTemplate>
</ResourceDictionary>
